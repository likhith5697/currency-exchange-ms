spring.application.name=currency-exchange-service
server.port=8082
spring.config.import = optional:configserver:http://localhost:8888
spring.jpa.show-sql=true
spring.datasource.url=jdbc:h2:mem:testdb
spring.h2.console.enable=true
spring.jpa.defer-datasource-initialization=true

eureka.client.serviceUrl.defaultZone = http://localhost:8761/eureka
eureka.instance.prefer-ip-address=true
eureka.instance.hostname=localhost

resilience4j.retry.instances.sampleApi.maxAttempts=5
resilience4j.retry.instances.sampleApi.waitDuration=2s
resilience4j.retry.instances.sampleApi.enableExponentialBackoff=true



# Only when 90 % of requests fail , then only it goes to OPEN - STATE (circuit breaker then opens and it prevents new requests to hit)
#Instead it calls the fallBack method showing temporary down or whatever message or response

#resilience4j.circuitbreaker.instances.default.failureRateThresHold = 90


#Rate Limiter
#It allows 2 requests for every 10 seconds
resilience4j.rateLimiter.instances.default.limitForPeriod = 2 
resilience4j.rateLimiter.instances.default.limitRefreshPeriod=PT10S


#Allows only max 10 concurrent calls to that particular API
resilience4j.bulkhead.instances.default.maxConcurrentCalls = 10



management.tracing.sampling.probability=1.0 
logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}] 